/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LLOWER 1
#define LRAISE 2
#define LADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ladjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        Radjust {
            if-layers = <4 5>;
            then-layer = <6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC         &kp N1  &kp N2     &kp N3  &kp N4  &kp N5                             &kp N6     &kp N7  &kp N8     &kp N9     &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W      &kp E   &kp R   &kp T                              &kp Y      &kp U   &kp I      &kp O      &kp P     &kp ENTER
&kp LEFT_SHIFT  &kp A   &kp S      &kp D   &kp F   &kp G                              &kp H      &kp J   &kp K      &kp L      &kp SEMI  &kp RSHFT
&kp LCTRL       &kp Z   &kp X      &kp C   &kp V   &kp B      &kp GRAVE    &mkp MCLK  &kp N      &kp M   &kp COMMA  &kp DOT    &kp FSLH  &kp RCTRL
                        &kp ENTER  &mo 2   &mo 1   &kp SPACE  &kp LALT     &kp RALT   &kp SPACE  &mo 4   &mo 5      &kp ENTER
            >;

            sensor-bindings =
                <&inc_dec_kp SEMICOLON SQT>,
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        Llower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F10  &kp F11  &kp F11  &kp F12    &kp INS     &kp DEL                              &kp F6     &kp F7    &kp F8     &kp F9     &kp F10   &kp F11
&trans   &kp Y    &kp U    &kp I      &kp O       &kp P                                &kp N6     &kp N7    &kp N8     &kp N9     &kp N0    &kp F12
&trans   &kp H    &kp J    &kp K      &kp L       &kp SEMICOLON                        &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &kp PIPE
&trans   &kp N    &kp M    &kp COMMA  &kp PERIOD  &kp SLASH      &kp K_MUTE    &trans  &kp LBKT   &kp RBKT  &kp SEMI   &kp COLON  &kp BSLH  &trans
                  &trans   &trans     &trans      &trans         &trans        &trans  &trans     &trans    &trans     &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        Lraise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp ESC    &kp F1  &kp F2    &kp F3  &kp F4  &kp F5                     &trans     &trans    &trans    &trans     &trans   &trans
&kp GRAVE  &kp F6  &kp F7    &kp F8  &kp F9  &kp F10                    &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&trans     &kp F11  &trans    &trans  &trans  &trans                     &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &trans
&trans     &trans  &trans    &trans  &trans  &trans   &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                   &kp LWIN  &trans  &trans  &trans   &trans    &trans  &trans     &trans    &trans    &kp RWIN
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Ladjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                     &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                  &none  &none  &none  &none  &none  &none
&none              &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                            &none  &none  &none  &none  &none  &none
&none              &none            &none            &none            &none            &none            &none    &none  &none  &none  &none  &none  &none  &none
                                    &none            &none            &none            &none            &none    &none  &none  &none  &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        Rlower_layer {
            bindings = <
&kp ESC    &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                     &kp F6  &kp F7    &kp F8     &kp MINUS  &kp EQUAL  &kp DEL
&kp GRAVE  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10                    &kp N6  &kp N7    &kp UP     &kp LBKT   &kp RBKT   &kp BSLH
&trans     &trans  &trans  &trans  &trans  &trans                     &trans  &kp LEFT  &kp DOWN   &kp RIGHT  &kp SQT    &kp RSHFT
&trans     &trans  &trans  &trans  &trans  &trans   &trans    &trans  &trans  &trans    &kp COMMA  &kp DOT    &kp FSLH   &kp RCTRL
                   &trans  &trans  &trans  &trans   &trans    &trans  &trans  &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };

        Rraise_layer {
            bindings = <
&trans    &trans  &trans  &trans  &trans  &trans                    &trans           &kp ESC          &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS  &trans
&kp CAPS  &trans  &trans  &trans  &trans  &trans                    &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS   &trans
&trans    &trans  &trans  &trans  &trans  &trans                    &trans           &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_EQUAL  &trans
&trans    &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp RET       &trans
                  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans           &trans           &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };

        Radjust_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans                    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &ext_power EP_TOG
&trans  &trans  &trans  &trans  &trans  &trans                    &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans           &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans           &trans           &trans           &trans           &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans           &trans           &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>, <&inc_dec_kp 0 0>;
        };
    };
};
